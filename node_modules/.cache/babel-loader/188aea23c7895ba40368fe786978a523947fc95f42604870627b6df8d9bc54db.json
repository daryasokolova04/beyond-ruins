{"ast":null,"code":"var _jsxFileName = \"/Users/darya/project/src/components/editPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../api/fake.api/users.api\";\nimport TextField from \"./fields/textField\";\nimport TextAreaField from \"./fields/textAreaField\";\nimport { useNavigate } from \"react-router-dom\";\nimport SelectCategories from \"./selectCategories\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPost = ({\n  id\n}) => {\n  _s();\n  const [post, setPost] = useState({\n    id: id,\n    userId: \"\",\n    categoryId: \"\",\n    title: \"\",\n    text: \"\"\n  });\n  const [categories, setCategories] = useState();\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    let isMounted = true;\n    api.getPostById(id).then(data => {\n      setPost(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  useEffect(() => {\n    let isMounted = true;\n    api.fetchAllCategories().then(data => {\n      setCategories(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  const handleChange = target => {\n    setPost(prevState => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n  const handleClick = () => {\n    api.update(id, post).then(() => navigate(`/home/${post.userId}`, {\n      replace: true\n    }));\n  };\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n  const isValid = Object.keys(errors).length === 0;\n  const validatorConfig = {\n    title: {\n      isRequired: {\n        message: \"Email обязателен для заполнения\"\n      }\n    },\n    text: {\n      isRequired: {\n        message: \"Поле обязательно для заполнения\"\n      }\n    }\n  };\n  return post && categories ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        name: \"title\",\n        value: post.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectCategories, {\n        defaultValue: post.categoryId,\n        label: \"\\u0422\\u0435\\u043C\\u0430 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        onChange: handleChange,\n        options: categories,\n        name: \"categoryId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n        label: \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        name: \"text\",\n        value: post.text,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        type: \"submit\",\n        className: \"btn btn-primary mt-2 mb-2\",\n        disabled: !isValid,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this) : \"loading\";\n};\n_s(EditPost, \"Lz60inMo5ogryIyEkymqewtCmUY=\", false, function () {\n  return [useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useEffect","useState","api","TextField","TextAreaField","useNavigate","SelectCategories","jsxDEV","_jsxDEV","EditPost","id","_s","post","setPost","userId","categoryId","title","text","categories","setCategories","errors","setErrors","navigate","isMounted","getPostById","then","data","fetchAllCategories","handleChange","target","prevState","name","value","handleClick","update","replace","validate","validator","validatorConfig","Object","keys","length","isValid","isRequired","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","label","onChange","defaultValue","options","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/darya/project/src/components/editPost.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"../api/fake.api/users.api\";\nimport TextField from \"./fields/textField\";\nimport TextAreaField from \"./fields/textAreaField\";\nimport { useNavigate } from \"react-router-dom\";\nimport SelectCategories from \"./selectCategories\";\n\nconst EditPost = ({ id }) => {\n  const [post, setPost] = useState({\n    id: id,\n    userId: \"\",\n    categoryId: \"\",\n    title: \"\",\n    text: \"\",\n  });\n  const [categories, setCategories] = useState();\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    let isMounted = true;\n    api.getPostById(id).then((data) => {\n      setPost(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    let isMounted = true;\n    api.fetchAllCategories().then((data) => {\n      setCategories(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const handleChange = (target) => {\n    setPost((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n\n  const handleClick = () => {\n    api\n      .update(id, post)\n      .then(() => navigate(`/home/${post.userId}`, { replace: true }));\n  };\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const validatorConfig = {\n    title: {\n      isRequired: { message: \"Email обязателен для заполнения\" },\n    },\n    text: {\n      isRequired: { message: \"Поле обязательно для заполнения\" },\n    },\n  };\n\n  return post && categories ? (\n    <div className=\"m-4\">\n      <div className=\"shadow p-4\">\n        <h1>Редактирование поста</h1>\n        <TextField\n          type=\"text\"\n          label=\"Название поста\"\n          name=\"title\"\n          value={post.title}\n          onChange={handleChange}\n        />\n        <SelectCategories\n          defaultValue={post.categoryId}\n          label=\"Тема поста\"\n          onChange={handleChange}\n          options={categories}\n          name=\"categoryId\"\n        />\n        <TextAreaField\n          label=\"Содержание поста\"\n          name=\"text\"\n          value={post.text}\n          onChange={handleChange}\n        />\n        <button\n          onClick={handleClick}\n          type=\"submit\"\n          className=\"btn btn-primary mt-2 mb-2\"\n          disabled={!isValid}\n        >\n          Сохранить изменения\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"loading\"\n  );\n};\n\nexport default EditPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}