{"ast":null,"code":"const data = [{\n  id: \"1\",\n  name: \"ivan\",\n  surname: \"ivanov\",\n  sex: \"Мужской\",\n  email: \"ivan.ivanov@mail.ru\",\n  password: \"123\",\n  license: true\n}, {\n  id: \"2\",\n  name: \"kate\",\n  surname: \"sidorova\",\n  sex: \"Женский\",\n  email: \"kate@kate.com\",\n  password: \"456\",\n  license: true\n}];\nconst posts = [{\n  id: \"121212121212\",\n  userId: \"1\",\n  categoryId: \"type1\",\n  title: \"Lorem ipsum dolor\",\n  text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Dignissim enim sit amet venenatis. Et ligula ullamcorper malesuada proin libero nunc consequat interdum. Mauris vitae ultricies leo integer malesuada nunc vel risus. Proin nibh nisl condimentum id venenatis a condimentum vitae.\"\n}, {\n  id: \"456456456\",\n  userId: \"2\",\n  categoryId: \"type2\",\n  title: \"sed do eiusmod\",\n  text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \"\n}, {\n  id: \"678678678678\",\n  userId: \"2\",\n  categoryId: \"type3\",\n  title: \"Dignissim enim \",\n  text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Dignissim enim sit amet venenatis. Et ligula ullamcorper malesuada proin libero nunc consequat interdum.\"\n}];\nconst categories = [{\n  id: \"type1\",\n  name: \"советы\",\n  color: \"primary\"\n}, {\n  id: \"type2\",\n  name: \"личный опыт\",\n  color: \"info\"\n}, {\n  id: \"type3\",\n  name: \"рецензия на отель\",\n  color: \"danger\"\n}, {\n  id: \"type4\",\n  name: \"рецензия на ресторан\",\n  color: \"success\"\n}, {\n  id: \"type5\",\n  name: \"путеводитель\",\n  color: \"warning\"\n}];\nconst comments = [{\n  commentId: \"com1\",\n  postId: \"121212121212\",\n  userId: \"2\",\n  commentText: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Feugiat in ante metus dictum.\"\n}, {\n  commentId: \"com2\",\n  postId: \"456456456\",\n  userId: \"1\",\n  commentText: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\"\n}];\nlet isLogged = false;\n// const user = [\n//   {\n//     userId: \"\",\n//     login: \"\",\n//     email: \"\",\n//     password: \"\",\n//     gender: \"\",\n//     license: true,\n//     registrationDate: \"\",\n//   },\n// ];\n\n// const comments = [\n//   {\n//     commentId: \"\",\n//     postId: \"\",\n//     userId: \"\",\n//     commentText: \"\",\n//     creationTime: \"\",\n//   },\n// ];\n\n// const posts = [\n//   {\n//     postId: \"\",\n//     userId: \"\",\n//     categoryId: \"\",\n//     title: \"\",\n//     text: \"\",\n//     creationTime: \"\",\n//   },\n// ];\n\n// const categories = [\n// \t{\n// \tcategoryId: \"\",\n// \tname: \"\",\n// \tcolor: \"\"\n// \t},\n// ];\n\nif (!localStorage.getItem(\"isLogged\")) {\n  localStorage.setItem(\"isLogged\", JSON.stringify(isLogged));\n}\nif (!localStorage.getItem(\"data\")) {\n  localStorage.setItem(\"data\", JSON.stringify(data));\n}\nif (!localStorage.getItem(\"posts\")) {\n  localStorage.setItem(\"posts\", JSON.stringify(posts));\n}\nif (!localStorage.getItem(\"categories\")) {\n  localStorage.setItem(\"categories\", JSON.stringify(categories));\n}\nif (!localStorage.getItem(\"comments\")) {\n  localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst getIsLogged = () => new Promise(resolve => {\n  window.setTimeout(function () {\n    resolve(JSON.parse(localStorage.getItem(\"isLogged\")));\n  }, 0);\n});\nconst setIsLogged = () => new Promise(resolve => {\n  const isLogged = JSON.parse(localStorage.getItem(\"isLogged\"));\n  isLogged;\n  localStorage.setItem(\"data\", JSON.stringify(data));\n  resolve(data => console.log(data));\n});\nconst fetchAllUsers = () => new Promise(resolve => {\n  window.setTimeout(function () {\n    resolve(JSON.parse(localStorage.getItem(\"data\")));\n  }, 0);\n});\nconst fetchAllPosts = () => new Promise(resolve => {\n  window.setTimeout(function () {\n    resolve(JSON.parse(localStorage.getItem(\"posts\")));\n  }, 0);\n});\nconst fetchAllCategories = () => new Promise(resolve => {\n  window.setTimeout(function () {\n    resolve(JSON.parse(localStorage.getItem(\"categories\")));\n  }, 0);\n});\nconst getCommentsByPostId = id => new Promise(resolve => {\n  window.setTimeout(function () {\n    const comments = JSON.parse(localStorage.getItem(\"comments\"));\n    const neededComments = comments.filter(comment => {\n      // console.log(comment, id);\n      return comment.postId === id;\n    });\n    resolve(neededComments);\n  }, 0);\n});\nconst getUserById = id => new Promise(resolve => {\n  window.setTimeout(function () {\n    resolve(JSON.parse(localStorage.getItem(\"data\")).find(user => user.id === id));\n  }, 0);\n});\nconst getPostById = id => new Promise(resolve => {\n  window.setTimeout(function () {\n    resolve(JSON.parse(localStorage.getItem(\"posts\")).find(user => user.id === id));\n  }, 0);\n});\nconst getCategoryById = id => new Promise(resolve => {\n  window.setTimeout(function () {\n    resolve(JSON.parse(localStorage.getItem(\"categories\")).find(user => user.id === id));\n  }, 0);\n});\nconst addUser = user => new Promise(resolve => {\n  const data = JSON.parse(localStorage.getItem(\"data\"));\n  data.push(user);\n  localStorage.setItem(\"data\", JSON.stringify(data));\n  resolve(data => console.log(data));\n});\nconst addPost = post => new Promise(() => {\n  const posts = JSON.parse(localStorage.getItem(\"posts\"));\n  posts.push(post);\n  localStorage.setItem(\"posts\", JSON.stringify(posts));\n});\nconst addComment = data => new Promise(() => {\n  const comments = JSON.parse(localStorage.getItem(\"comments\"));\n  comments.push(data);\n  localStorage.setItem(\"comments\", JSON.stringify(comments));\n});\nconst deletePost = postId => new Promise(() => {\n  const posts = JSON.parse(localStorage.getItem(\"posts\"));\n  console.log(posts);\n  const updatedPosts = posts.filter(post => {\n    return post.id !== postId;\n  }) || [];\n  console.log(updatedPosts);\n  localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n});\nconst deleteComment = commentId => new Promise(() => {\n  const comments = JSON.parse(localStorage.getItem(\"comments\"));\n  console.log(comments);\n  const updatedComments = comments.filter(comment => {\n    return comment.id !== commentId;\n  }) || [];\n  console.log(updatedComments);\n  localStorage.setItem(\"comments\", JSON.stringify(updatedComments));\n});\nconst update = (id, data) => new Promise(resolve => {\n  const posts = JSON.parse(localStorage.getItem(\"posts\"));\n  const postIndex = posts.findIndex(u => u.id === id);\n  posts[postIndex] = {\n    ...posts[postIndex],\n    ...data\n  };\n  localStorage.setItem(\"posts\", JSON.stringify(posts));\n  console.log(posts);\n  resolve(posts[postIndex]);\n});\nexport default {\n  update,\n  addPost,\n  deletePost,\n  fetchAllUsers,\n  fetchAllPosts,\n  getUserById,\n  getPostById,\n  addUser,\n  fetchAllCategories,\n  getCategoryById,\n  getCommentsByPostId,\n  addComment,\n  deleteComment,\n  getIsLogged\n};","map":{"version":3,"names":["data","id","name","surname","sex","email","password","license","posts","userId","categoryId","title","text","categories","color","comments","commentId","postId","commentText","isLogged","localStorage","getItem","setItem","JSON","stringify","getIsLogged","Promise","resolve","window","setTimeout","parse","setIsLogged","console","log","fetchAllUsers","fetchAllPosts","fetchAllCategories","getCommentsByPostId","neededComments","filter","comment","getUserById","find","user","getPostById","getCategoryById","addUser","push","addPost","post","addComment","deletePost","updatedPosts","deleteComment","updatedComments","update","postIndex","findIndex","u"],"sources":["/Users/darya/project/src/api/fake.api/users.api.js"],"sourcesContent":["const data = [\n  {\n    id: \"1\",\n    name: \"ivan\",\n    surname: \"ivanov\",\n    sex: \"Мужской\",\n    email: \"ivan.ivanov@mail.ru\",\n    password: \"123\",\n    license: true,\n  },\n  {\n    id: \"2\",\n    name: \"kate\",\n    surname: \"sidorova\",\n    sex: \"Женский\",\n    email: \"kate@kate.com\",\n    password: \"456\",\n    license: true,\n  },\n];\n\nconst posts = [\n  {\n    id: \"121212121212\",\n    userId: \"1\",\n    categoryId: \"type1\",\n    title: \"Lorem ipsum dolor\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Dignissim enim sit amet venenatis. Et ligula ullamcorper malesuada proin libero nunc consequat interdum. Mauris vitae ultricies leo integer malesuada nunc vel risus. Proin nibh nisl condimentum id venenatis a condimentum vitae.\",\n  },\n  {\n    id: \"456456456\",\n    userId: \"2\",\n    categoryId: \"type2\",\n    title: \"sed do eiusmod\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \",\n  },\n  {\n    id: \"678678678678\",\n    userId: \"2\",\n    categoryId: \"type3\",\n    title: \"Dignissim enim \",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Dignissim enim sit amet venenatis. Et ligula ullamcorper malesuada proin libero nunc consequat interdum.\",\n  },\n];\n\nconst categories = [\n  { id: \"type1\", name: \"советы\", color: \"primary\" },\n\n  { id: \"type2\", name: \"личный опыт\", color: \"info\" },\n\n  { id: \"type3\", name: \"рецензия на отель\", color: \"danger\" },\n\n  { id: \"type4\", name: \"рецензия на ресторан\", color: \"success\" },\n\n  { id: \"type5\", name: \"путеводитель\", color: \"warning\" },\n];\n\nconst comments = [\n  {\n    commentId: \"com1\",\n    postId: \"121212121212\",\n    userId: \"2\",\n    commentText:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Feugiat in ante metus dictum.\",\n  },\n  {\n    commentId: \"com2\",\n    postId: \"456456456\",\n    userId: \"1\",\n    commentText:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\",\n  },\n];\n\nlet isLogged = false;\n// const user = [\n//   {\n//     userId: \"\",\n//     login: \"\",\n//     email: \"\",\n//     password: \"\",\n//     gender: \"\",\n//     license: true,\n//     registrationDate: \"\",\n//   },\n// ];\n\n// const comments = [\n//   {\n//     commentId: \"\",\n//     postId: \"\",\n//     userId: \"\",\n//     commentText: \"\",\n//     creationTime: \"\",\n//   },\n// ];\n\n// const posts = [\n//   {\n//     postId: \"\",\n//     userId: \"\",\n//     categoryId: \"\",\n//     title: \"\",\n//     text: \"\",\n//     creationTime: \"\",\n//   },\n// ];\n\n// const categories = [\n// \t{\n// \tcategoryId: \"\",\n// \tname: \"\",\n// \tcolor: \"\"\n// \t},\n// ];\n\nif (!localStorage.getItem(\"isLogged\")) {\n  localStorage.setItem(\"isLogged\", JSON.stringify(isLogged));\n}\n\nif (!localStorage.getItem(\"data\")) {\n  localStorage.setItem(\"data\", JSON.stringify(data));\n}\n\nif (!localStorage.getItem(\"posts\")) {\n  localStorage.setItem(\"posts\", JSON.stringify(posts));\n}\n\nif (!localStorage.getItem(\"categories\")) {\n  localStorage.setItem(\"categories\", JSON.stringify(categories));\n}\n\nif (!localStorage.getItem(\"comments\")) {\n  localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\n\nconst getIsLogged = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem(\"isLogged\")));\n    }, 0);\n  });\n\nconst setIsLogged = () =>\n  new Promise((resolve) => {\n    const isLogged = JSON.parse(localStorage.getItem(\"isLogged\"));\n    isLogged;\n    localStorage.setItem(\"data\", JSON.stringify(data));\n    resolve((data) => console.log(data));\n  });\n\nconst fetchAllUsers = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem(\"data\")));\n    }, 0);\n  });\n\nconst fetchAllPosts = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem(\"posts\")));\n    }, 0);\n  });\n\nconst fetchAllCategories = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem(\"categories\")));\n    }, 0);\n  });\n\nconst getCommentsByPostId = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      const comments = JSON.parse(localStorage.getItem(\"comments\"));\n      const neededComments = comments.filter((comment) => {\n        // console.log(comment, id);\n        return comment.postId === id;\n      });\n      resolve(neededComments);\n    }, 0);\n  });\n\nconst getUserById = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem(\"data\")).find((user) => user.id === id)\n      );\n    }, 0);\n  });\n\nconst getPostById = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem(\"posts\")).find((user) => user.id === id)\n      );\n    }, 0);\n  });\n\nconst getCategoryById = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem(\"categories\")).find(\n          (user) => user.id === id\n        )\n      );\n    }, 0);\n  });\n\nconst addUser = (user) =>\n  new Promise((resolve) => {\n    const data = JSON.parse(localStorage.getItem(\"data\"));\n    data.push(user);\n    localStorage.setItem(\"data\", JSON.stringify(data));\n    resolve((data) => console.log(data));\n  });\n\nconst addPost = (post) =>\n  new Promise(() => {\n    const posts = JSON.parse(localStorage.getItem(\"posts\"));\n    posts.push(post);\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n  });\n\nconst addComment = (data) =>\n  new Promise(() => {\n    const comments = JSON.parse(localStorage.getItem(\"comments\"));\n    comments.push(data);\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n  });\n\nconst deletePost = (postId) =>\n  new Promise(() => {\n    const posts = JSON.parse(localStorage.getItem(\"posts\"));\n    console.log(posts);\n    const updatedPosts =\n      posts.filter((post) => {\n        return post.id !== postId;\n      }) || [];\n    console.log(updatedPosts);\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n  });\n\nconst deleteComment = (commentId) =>\n  new Promise(() => {\n    const comments = JSON.parse(localStorage.getItem(\"comments\"));\n    console.log(comments);\n    const updatedComments =\n      comments.filter((comment) => {\n        return comment.id !== commentId;\n      }) || [];\n    console.log(updatedComments);\n    localStorage.setItem(\"comments\", JSON.stringify(updatedComments));\n  });\n\nconst update = (id, data) =>\n  new Promise((resolve) => {\n    const posts = JSON.parse(localStorage.getItem(\"posts\"));\n    const postIndex = posts.findIndex((u) => u.id === id);\n    posts[postIndex] = { ...posts[postIndex], ...data };\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n    console.log(posts);\n    resolve(posts[postIndex]);\n  });\n\nexport default {\n  update,\n  addPost,\n  deletePost,\n  fetchAllUsers,\n  fetchAllPosts,\n  getUserById,\n  getPostById,\n  addUser,\n  fetchAllCategories,\n  getCategoryById,\n  getCommentsByPostId,\n  addComment,\n  deleteComment,\n  getIsLogged,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}