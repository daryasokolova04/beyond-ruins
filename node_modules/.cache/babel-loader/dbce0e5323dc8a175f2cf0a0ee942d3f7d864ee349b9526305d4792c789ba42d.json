{"ast":null,"code":"const users = [];\nif (!localStorage.getItem(\"users\")) {\n  localStorage.setItem(\"users\", JSON.stringify(users));\n}\nconst fetchAll = () => new Promise(resolve => {\n  window.setTimeout(function () {\n    resolve(JSON.parse(localStorage.getItem(\"users\")));\n  }, 2000);\n});\nconst getById = id => new Promise(resolve => {\n  window.setTimeout(function () {\n    resolve(JSON.parse(localStorage.getItem(\"users\")).find(user => user._id === id));\n  }, 1000);\n});\nconst clearLocalStorage = () => {\n  localStorage.clear();\n};\nconst update = (id, data) => new Promise(resolve => {\n  const users = JSON.parse(localStorage.getItem(\"users\"));\n  const userIndex = users.findIndex(u => u._id === id);\n  users[userIndex] = {\n    ...users[userIndex],\n    ...data\n  };\n  localStorage.setItem(\"users\", JSON.stringify(users));\n  resolve(users[userIndex]);\n});\nexport default {\n  fetchAll,\n  getById,\n  update,\n  clearLocalStorage\n};","map":{"version":3,"names":["users","localStorage","getItem","setItem","JSON","stringify","fetchAll","Promise","resolve","window","setTimeout","parse","getById","id","find","user","_id","clearLocalStorage","clear","update","data","userIndex","findIndex","u"],"sources":["/Users/darya/project/src/api/fake.api/users.api.js"],"sourcesContent":["const users = [];\n\nif (!localStorage.getItem(\"users\")) {\n  localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem(\"users\")));\n    }, 2000);\n  });\n\nconst getById = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem(\"users\")).find(\n          (user) => user._id === id\n        )\n      );\n    }, 1000);\n  });\n\nconst clearLocalStorage = () => {\n  localStorage.clear();\n};\n\nconst update = (id, data) =>\n  new Promise((resolve) => {\n    const users = JSON.parse(localStorage.getItem(\"users\"));\n    const userIndex = users.findIndex((u) => u._id === id);\n    users[userIndex] = { ...users[userIndex], ...data };\n    localStorage.setItem(\"users\", JSON.stringify(users));\n    resolve(users[userIndex]);\n  });\n\nexport default {\n  fetchAll,\n  getById,\n  update,\n  clearLocalStorage,\n};\n"],"mappings":"AAAA,MAAMA,KAAK,GAAG,EAAE;AAEhB,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;EAClCD,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC,CAAC;AACtD;AAEA,MAAMM,QAAQ,GAAGA,CAAA,KACf,IAAIC,OAAO,CAAEC,OAAO,IAAK;EACvBC,MAAM,CAACC,UAAU,CAAC,YAAY;IAC5BF,OAAO,CAACJ,IAAI,CAACO,KAAK,CAACV,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EACpD,CAAC,EAAE,IAAI,CAAC;AACV,CAAC,CAAC;AAEJ,MAAMU,OAAO,GAAIC,EAAE,IACjB,IAAIN,OAAO,CAAEC,OAAO,IAAK;EACvBC,MAAM,CAACC,UAAU,CAAC,YAAY;IAC5BF,OAAO,CACLJ,IAAI,CAACO,KAAK,CAACV,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAACY,IAAI,CAC3CC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKH,EACzB,CACF,CAAC;EACH,CAAC,EAAE,IAAI,CAAC;AACV,CAAC,CAAC;AAEJ,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;EAC9BhB,YAAY,CAACiB,KAAK,CAAC,CAAC;AACtB,CAAC;AAED,MAAMC,MAAM,GAAGA,CAACN,EAAE,EAAEO,IAAI,KACtB,IAAIb,OAAO,CAAEC,OAAO,IAAK;EACvB,MAAMR,KAAK,GAAGI,IAAI,CAACO,KAAK,CAACV,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACvD,MAAMmB,SAAS,GAAGrB,KAAK,CAACsB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACP,GAAG,KAAKH,EAAE,CAAC;EACtDb,KAAK,CAACqB,SAAS,CAAC,GAAG;IAAE,GAAGrB,KAAK,CAACqB,SAAS,CAAC;IAAE,GAAGD;EAAK,CAAC;EACnDnB,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC,CAAC;EACpDQ,OAAO,CAACR,KAAK,CAACqB,SAAS,CAAC,CAAC;AAC3B,CAAC,CAAC;AAEJ,eAAe;EACbf,QAAQ;EACRM,OAAO;EACPO,MAAM;EACNF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}