{"ast":null,"code":"var _jsxFileName = \"/Users/darya/project/src/components/editPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom\";\nimport api from \"../api/fake.api/users.api\";\nimport TextField from \"./fields/textField\";\nimport TextAreaField from \"./fields/textAreaField\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPost = () => {\n  _s();\n  const params = useParams();\n  const id = params.postId;\n  const history = useHistory();\n  const [post, setPost] = useState({\n    id: id,\n    userId: \"\",\n    title: \"\",\n    text: \"\"\n  });\n  useEffect(() => {\n    let isMounted = true;\n    api.getPostById(id).then(data => {\n      setPost(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  console.log(post);\n  const handleChange = target => {\n    setPost(prevState => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n  const handleClick = () => {\n    api.update(id, post).then(() => history.replace(`/home/${post.userId}`));\n  };\n  return post ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        name: \"title\",\n        value: post.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n        label: \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        name: \"text\",\n        value: post.text,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        type: \"submit\",\n        className: \"btn btn-primary mt-2 mb-2\"\n        //   disabled={!isValid}\n        ,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this) : \"loading\";\n};\n_s(EditPost, \"8rkEJwet3kqC6KKCmVULZr29tAQ=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useEffect","useState","useParams","api","TextField","TextAreaField","useHistory","jsxDEV","_jsxDEV","EditPost","_s","params","id","postId","history","post","setPost","userId","title","text","isMounted","getPostById","then","data","console","log","handleChange","target","prevState","name","value","handleClick","update","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","label","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/darya/project/src/components/editPost.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom\";\nimport api from \"../api/fake.api/users.api\";\nimport TextField from \"./fields/textField\";\nimport TextAreaField from \"./fields/textAreaField\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\n\nconst EditPost = () => {\n  const params = useParams();\n  const id = params.postId;\n  const history = useHistory();\n\n  const [post, setPost] = useState({ id: id, userId: \"\", title: \"\", text: \"\" });\n\n  useEffect(() => {\n    let isMounted = true;\n    api.getPostById(id).then((data) => {\n      setPost(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  console.log(post);\n  const handleChange = (target) => {\n    setPost((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n\n  const handleClick = () => {\n    api.update(id, post).then(() => history.replace(`/home/${post.userId}`));\n  };\n\n  return post ? (\n    <div className=\"m-4\">\n      <div className=\"shadow p-4\">\n        <h1>Редактирование поста</h1>\n        <TextField\n          type=\"text\"\n          label=\"Название поста\"\n          name=\"title\"\n          value={post.title}\n          onChange={handleChange}\n        />\n        <TextAreaField\n          label=\"Содержание поста\"\n          name=\"text\"\n          value={post.text}\n          onChange={handleChange}\n        />\n        <button\n          onClick={handleClick}\n          type=\"submit\"\n          className=\"btn btn-primary mt-2 mb-2\"\n          //   disabled={!isValid}\n        >\n          Сохранить изменения\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"loading\"\n  );\n};\n\nexport default EditPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}