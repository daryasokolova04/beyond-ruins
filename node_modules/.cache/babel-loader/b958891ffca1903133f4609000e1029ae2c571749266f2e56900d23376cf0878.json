{"ast":null,"code":"var _jsxFileName = \"/Users/darya/project/src/components/postsPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport api from \"../api\";\nimport PostCard from \"./postCard\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Posts from \"./posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const [users, setUsers] = useState();\n  const [posts, setPosts] = useState();\n  useEffect(() => {\n    api.data.fetchAllUsers().then(data => setUsers(data));\n  }, [users]);\n  useEffect(() => {\n    api.posts.fetchAllPosts().then(data => setUsers(data));\n  }, [posts]);\n  const getUserName = id => {\n    api.data.getUserById(id).then(user => user.name + \" \" + user.surname);\n  };\n  return users && posts ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"m-4 p-2\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card m-4 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: getUserName(post.userId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(PostCard, {\n            post: post,\n            userId: post.userId\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this);\n        })]\n      }, post.userId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true) : \"Loading\";\n};\n_s(PostsPage, \"O1f8U2DsIo8Q8rO0RJEZa5QvZ/g=\");\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","api","PostCard","useEffect","useState","Posts","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsPage","_s","users","setUsers","posts","setPosts","data","fetchAllUsers","then","fetchAllPosts","getUserName","id","getUserById","user","name","surname","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","post","userId","_c","$RefreshReg$"],"sources":["/Users/darya/project/src/components/postsPage.jsx"],"sourcesContent":["import React from \"react\";\nimport api from \"../api\";\nimport PostCard from \"./postCard\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Posts from \"./posts\";\n\nconst PostsPage = () => {\n  const [users, setUsers] = useState();\n  const [posts, setPosts] = useState();\n  useEffect(() => {\n    api.data.fetchAllUsers().then((data) => setUsers(data));\n  }, [users]);\n\n  useEffect(() => {\n    api.posts.fetchAllPosts().then((data) => setUsers(data));\n  }, [posts]);\n\n  const getUserName = (id) => {\n    api.data.getUserById(id).then((user) => user.name + \" \" + user.surname);\n  };\n\n  return users && posts ? (\n    <>\n      <h1 className=\"m-4 p-2\">Posts</h1>\n      {posts.map((post) => {\n        return (\n          <div key={post.userId} className=\"card m-4 p-2\">\n            <h3>{getUserName(post.userId)}</h3>\n            {posts.map((post) => {\n              return (\n                <PostCard key={post.id} post={post} userId={post.userId} />\n              );\n            })}\n          </div>\n        );\n      })}\n    </>\n  ) : (\n    \"Loading\"\n  );\n};\n\nexport default PostsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC;EACpCD,SAAS,CAAC,MAAM;IACdF,GAAG,CAACe,IAAI,CAACC,aAAa,CAAC,CAAC,CAACC,IAAI,CAAEF,IAAI,IAAKH,QAAQ,CAACG,IAAI,CAAC,CAAC;EACzD,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEXT,SAAS,CAAC,MAAM;IACdF,GAAG,CAACa,KAAK,CAACK,aAAa,CAAC,CAAC,CAACD,IAAI,CAAEF,IAAI,IAAKH,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,MAAMM,WAAW,GAAIC,EAAE,IAAK;IAC1BpB,GAAG,CAACe,IAAI,CAACM,WAAW,CAACD,EAAE,CAAC,CAACH,IAAI,CAAEK,IAAI,IAAKA,IAAI,CAACC,IAAI,GAAG,GAAG,GAAGD,IAAI,CAACE,OAAO,CAAC;EACzE,CAAC;EAED,OAAOb,KAAK,IAAIE,KAAK,gBACnBP,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAIoB,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCjB,KAAK,CAACkB,GAAG,CAAEC,IAAI,IAAK;MACnB,oBACE1B,OAAA;QAAuBoB,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC7CnB,OAAA;UAAAmB,QAAA,EAAKN,WAAW,CAACa,IAAI,CAACC,MAAM;QAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAClCjB,KAAK,CAACkB,GAAG,CAAEC,IAAI,IAAK;UACnB,oBACE1B,OAAA,CAACL,QAAQ;YAAe+B,IAAI,EAAEA,IAAK;YAACC,MAAM,EAAED,IAAI,CAACC;UAAO,GAAzCD,IAAI,CAACZ,EAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAoC,CAAC;QAE/D,CAAC,CAAC;MAAA,GANME,IAAI,CAACC,MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOhB,CAAC;IAEV,CAAC,CAAC;EAAA,eACF,CAAC,GAEH,SACD;AACH,CAAC;AAACpB,EAAA,CAlCID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}