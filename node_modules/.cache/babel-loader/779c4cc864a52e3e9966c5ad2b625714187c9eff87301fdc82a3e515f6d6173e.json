{"ast":null,"code":"var _jsxFileName = \"/Users/darya/project/src/components/postsPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport api from \"../api\";\nimport PostCard from \"./postCard\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Posts from \"./posts\";\nimport CommentPost from \"./commentPost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    let isMounted = true;\n    api.data.fetchAllPosts().then(data => {\n      if (isMounted) setPosts(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [posts]);\n  useEffect(() => {\n    let isMounted = true;\n    api.data.fetchAllUsers().then(data => {\n      if (isMounted) setUsers(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [users]);\n  const handleClick = () => {\n    /*#__PURE__*/_jsxDEV(CommentPost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this);\n  };\n  return users && posts ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"m-4 p-2\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), users.map(user => {\n      return posts.find(post => post.userId === user.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card m-4 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: user.name + \" \" + user.surname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), posts.map(post => {\n          if (post.userId === user.id) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(PostCard, {\n                postId: post.id\n              }, post.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 23\n              }, this), \";\", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleClick,\n                className: \"btn btn-primary mt-2 mb-2 m-2\",\n                children: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true);\n          }\n        })]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true) : \"Loading\";\n};\n_s(PostsPage, \"9bTF7W+p04eBmn16vitv0riykIc=\");\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","api","PostCard","useEffect","useState","Posts","CommentPost","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsPage","_s","users","setUsers","posts","setPosts","isMounted","data","fetchAllPosts","then","fetchAllUsers","handleClick","fileName","_jsxFileName","lineNumber","columnNumber","children","className","map","user","find","post","userId","id","name","surname","postId","onClick","_c","$RefreshReg$"],"sources":["/Users/darya/project/src/components/postsPage.jsx"],"sourcesContent":["import React from \"react\";\nimport api from \"../api\";\nimport PostCard from \"./postCard\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Posts from \"./posts\";\nimport CommentPost from \"./commentPost\";\n\nconst PostsPage = () => {\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    let isMounted = true;\n    api.data.fetchAllPosts().then((data) => {\n      if (isMounted) setPosts(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [posts]);\n\n  useEffect(() => {\n    let isMounted = true;\n    api.data.fetchAllUsers().then((data) => {\n      if (isMounted) setUsers(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [users]);\n\n  const handleClick = () => {\n    <CommentPost />;\n  };\n\n  return users && posts ? (\n    <>\n      <h1 className=\"m-4 p-2\">Posts</h1>\n      {users.map((user) => {\n        return (\n          posts.find((post) => post.userId === user.id) && (\n            <div key={user.id} className=\"card m-4 p-2\">\n              <h3>{user.name + \" \" + user.surname}</h3>\n              {posts.map((post) => {\n                if (post.userId === user.id) {\n                  return (\n                    <>\n                      <PostCard key={post.id} postId={post.id} />;\n                      <button\n                        onClick={handleClick}\n                        className=\"btn btn-primary mt-2 mb-2 m-2\"\n                      >\n                        Комментировать\n                      </button>\n                    </>\n                  );\n                }\n              })}\n            </div>\n          )\n        );\n      })}\n    </>\n  ) : (\n    \"Loading\"\n  );\n};\n\nexport default PostsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}