{"ast":null,"code":"var _jsxFileName = \"/Users/darya/project/src/components/postsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport api from \"../api\";\nimport PostCard from \"./postCard\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport CommentForm from \"./commentForm\";\nimport backgroundImage from \"../images/background.av1.avif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const [isLogged, setIsLogged] = useState();\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [newPosts, setNewPosts] = useState([]);\n  useEffect(() => {\n    let isMounted = true;\n\n    // try {\n    //   axios\n    //     .get(\"http://127.0.0.1:8000/api/v1/Posts/\")\n    //     .then((data) => setNewPosts(data.data));\n    // } catch (error) {\n    //   console.log(error);\n    // }\n\n    api.data.fetchAllPosts().then(data => {\n      if (isMounted) setPosts(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  useEffect(() => {\n    let isMounted = true;\n    api.data.fetchAllUsers().then(data => {\n      if (isMounted) setUsers(data);\n    });\n    try {} catch (error) {\n      console.log(error);\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  useEffect(() => {\n    let isMounted = true;\n    api.data.getIsLogged().then(data => setIsLogged(data));\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  const getComments = comment => {\n    const user = users.find(user => user.id === comment.userId);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.name + \" \" + user.surname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), \"s\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.commentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }, this)]\n    }, comment.commentId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  };\n\n  //   console.log(articles);\n  return users && posts ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-4 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow m-4 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: `url(${backgroundImage}`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"contain\",\n          height: 500,\n          width: 700,\n          margin: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"pt-4\",\n            children: \"Beyond Ruins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), users.map(user => {\n          return posts.find(post => post.userId === user.id) && user.id !== isLogged && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-4 p-2 card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: user.name + \" \" + user.surname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), posts.map(post => {\n              if (post.userId === user.id) {\n                return post && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(PostCard, {\n                    postId: post.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 29\n                  }, this), isLogged && /*#__PURE__*/_jsxDEV(CommentForm, {\n                    commentId: uuidv4(),\n                    postId: post.id,\n                    userId: isLogged\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 31\n                  }, this)]\n                }, post.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 27\n                }, this);\n              }\n            })]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this) : \"Loading\";\n};\n_s(PostsPage, \"jwlpI2UXE44u+z+LJe1HSogJofw=\");\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","useContext","api","PostCard","useEffect","useState","axios","v4","uuidv4","CommentForm","backgroundImage","jsxDEV","_jsxDEV","PostsPage","_s","isLogged","setIsLogged","users","setUsers","posts","setPosts","newPosts","setNewPosts","isMounted","data","fetchAllPosts","then","fetchAllUsers","error","console","log","getIsLogged","getComments","comment","user","find","id","userId","className","children","name","surname","fileName","_jsxFileName","lineNumber","columnNumber","commentText","commentId","style","backgroundRepeat","backgroundSize","height","width","margin","map","post","postId","_c","$RefreshReg$"],"sources":["/Users/darya/project/src/components/postsPage.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport api from \"../api\";\nimport PostCard from \"./postCard\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport CommentForm from \"./commentForm\";\nimport backgroundImage from \"../images/background.av1.avif\";\n\nconst PostsPage = () => {\n  const [isLogged, setIsLogged] = useState();\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n\n  const [newPosts, setNewPosts] = useState([]);\n  useEffect(() => {\n    let isMounted = true;\n\n    // try {\n    //   axios\n    //     .get(\"http://127.0.0.1:8000/api/v1/Posts/\")\n    //     .then((data) => setNewPosts(data.data));\n    // } catch (error) {\n    //   console.log(error);\n    // }\n\n    api.data.fetchAllPosts().then((data) => {\n      if (isMounted) setPosts(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    let isMounted = true;\n    api.data.fetchAllUsers().then((data) => {\n      if (isMounted) setUsers(data);\n    });\n\n    try {\n    } catch (error) {\n      console.log(error);\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    let isMounted = true;\n    api.data.getIsLogged().then((data) => setIsLogged(data));\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const getComments = (comment) => {\n    const user = users.find((user) => user.id === comment.userId);\n    return (\n      <div key={comment.commentId} className=\"m-2\">\n        <p>{user.name + \" \" + user.surname}</p>s<p>{comment.commentText}</p>\n      </div>\n    );\n  };\n\n  //   console.log(articles);\n  return users && posts ? (\n    <div className=\"m-4 p-4\">\n      <div className=\"shadow m-4 p-4\">\n        <div\n          style={{\n            backgroundImage: `url(${backgroundImage}`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"contain\",\n            height: 500,\n            width: 700,\n            margin: \"auto\",\n          }}\n        >\n          <div className=\"title justify-content-center\">\n            <h1 className=\"pt-4\">Beyond Ruins</h1>\n          </div>\n        </div>\n        <div>\n          <h1 className=\"text-center\">Posts</h1>\n          {users.map((user) => {\n            return (\n              posts.find((post) => post.userId === user.id) &&\n              user.id !== isLogged && (\n                <div key={user.id} className=\"m-4 p-2 card\">\n                  <h6>{user.name + \" \" + user.surname}</h6>\n                  {posts.map((post) => {\n                    if (post.userId === user.id) {\n                      return (\n                        post && (\n                          <div key={post.id}>\n                            <PostCard postId={post.id} />\n                            {isLogged && (\n                              <CommentForm\n                                commentId={uuidv4()}\n                                postId={post.id}\n                                userId={isLogged}\n                              />\n                            )}\n                          </div>\n                        )\n                      );\n                    }\n                  })}\n                </div>\n              )\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"Loading\"\n  );\n};\n\nexport default PostsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}