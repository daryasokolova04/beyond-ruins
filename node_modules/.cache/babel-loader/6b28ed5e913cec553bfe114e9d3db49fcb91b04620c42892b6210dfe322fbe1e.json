{"ast":null,"code":"var _jsxFileName = \"/Users/darya/project/src/components/userPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../api/fake.api/users.api\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport PostCard from \"./postCard\";\nimport axios from \"axios\";\nimport inMemoryJWT from \"../services/inMemoryJWT\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = ({\n  userId\n}) => {\n  _s();\n  const [user, setUser] = useState();\n  const [posts, setPosts] = useState();\n  const [isLogged, setIsLogged] = useState();\n  const [newUser, setNewUser] = useState();\n  //   const [newPosts, setNewPosts] = useState([]);\n  console.log(inMemoryJWT.getRefreshToken());\n  useEffect(() => {\n    api.getUserById(userId).then(data => {\n      setUser(data);\n    }, []);\n\n    // try {\n    //   axios\n    //     .get(`http://127.0.0.1:8000/api/v1/User/1/`)\n    //     .then((data) => setNewUser(data.data));\n    // } catch (error) {\n    //   console.log(error);\n    // }\n\n    api.fetchAllPosts().then(data => setPosts(data));\n\n    // try {\n    //   axios\n    //     .get(\"http://127.0.0.1:8000/api/v1/Posts/\")\n    //     .then((data) => setNewPosts(data.data));\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  }, []);\n\n  //   const userId = isLogged;\n\n  useEffect(() => {\n    let isMounted = true;\n    api.getIsLogged().then(data => setIsLogged(data));\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  const navigate = useNavigate();\n  const handleClick = () => {\n    navigate(`/home/${user.id}/addPost`, {\n      replace: true\n    });\n  };\n  const handleComeBack = () => {\n    navigate(`/home/${user.id}/posts`, {\n      replace: true\n    });\n  };\n  return posts && user ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-4 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow m-4 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"My posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: user.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), posts.map(post => {\n        if (post.userId === userId) {\n          // console.log(post);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(PostCard, {\n              postId: post.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"btn btn-sm btn-outline-dark m-2\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleComeBack,\n        className: \"btn btn-sm btn-outline-dark m-2\",\n        children: \"\\u041A\\u043E \\u0432\\u0441\\u0435\\u043C \\u043F\\u043E\\u0441\\u0442\\u0430\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this) : \"loading...\";\n};\n_s(UserPage, \"8DBDzVXIR/lTAb/VDjQVT5UJ0Xk=\", false, function () {\n  return [useNavigate];\n});\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useContext","useNavigate","api","useState","useEffect","PostCard","axios","inMemoryJWT","jsxDEV","_jsxDEV","UserPage","userId","_s","user","setUser","posts","setPosts","isLogged","setIsLogged","newUser","setNewUser","console","log","getRefreshToken","getUserById","then","data","fetchAllPosts","isMounted","getIsLogged","navigate","handleClick","id","replace","handleComeBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","login","map","post","postId","onClick","_c","$RefreshReg$"],"sources":["/Users/darya/project/src/components/userPage.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../api/fake.api/users.api\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport PostCard from \"./postCard\";\nimport axios from \"axios\";\nimport inMemoryJWT from \"../services/inMemoryJWT\";\n\nconst UserPage = ({ userId }) => {\n  const [user, setUser] = useState();\n  const [posts, setPosts] = useState();\n  const [isLogged, setIsLogged] = useState();\n  const [newUser, setNewUser] = useState();\n  //   const [newPosts, setNewPosts] = useState([]);\n  console.log(inMemoryJWT.getRefreshToken());\n\n  useEffect(() => {\n    api.getUserById(userId).then((data) => {\n      setUser(data);\n    }, []);\n\n    // try {\n    //   axios\n    //     .get(`http://127.0.0.1:8000/api/v1/User/1/`)\n    //     .then((data) => setNewUser(data.data));\n    // } catch (error) {\n    //   console.log(error);\n    // }\n\n    api.fetchAllPosts().then((data) => setPosts(data));\n\n    // try {\n    //   axios\n    //     .get(\"http://127.0.0.1:8000/api/v1/Posts/\")\n    //     .then((data) => setNewPosts(data.data));\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  }, []);\n\n  //   const userId = isLogged;\n\n  useEffect(() => {\n    let isMounted = true;\n    api.getIsLogged().then((data) => setIsLogged(data));\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate(`/home/${user.id}/addPost`, { replace: true });\n  };\n\n  const handleComeBack = () => {\n    navigate(`/home/${user.id}/posts`, { replace: true });\n  };\n\n  return posts && user ? (\n    <div className=\"m-4 p-4\">\n      <div className=\"shadow m-4 p-4\">\n        <h1 className=\"title\">My posts</h1>\n        <h5>{user.login}</h5>\n\n        {posts.map((post) => {\n          if (post.userId === userId) {\n            // console.log(post);\n            return (\n              <div key={post.id} className=\"card\">\n                <PostCard postId={post.id} />\n              </div>\n            );\n          }\n        })}\n\n        <button\n          onClick={handleClick}\n          className=\"btn btn-sm btn-outline-dark m-2\"\n        >\n          Создать пост\n        </button>\n        <button\n          onClick={handleComeBack}\n          className=\"btn btn-sm btn-outline-dark m-2\"\n        >\n          Ко всем постам\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"loading...\"\n  );\n};\n\nexport default UserPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}