{"ast":null,"code":"var _jsxFileName = \"/Users/darya/project/src/components/editPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../api/fake.api/users.api\";\nimport TextField from \"./fields/textField\";\nimport TextAreaField from \"./fields/textAreaField\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\nimport SelectCategories from \"./selectCategories\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPost = ({\n  id\n}) => {\n  _s();\n  const [post, setPost] = useState({\n    id: id,\n    userId: \"\",\n    categoryId: \"\",\n    title: \"\",\n    text: \"\"\n  });\n  const [categories, setCategories] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    let isMounted = true;\n    api.getPostById(id).then(data => {\n      setPost(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  useEffect(() => {\n    let isMounted = true;\n    api.fetchAllCategories().then(data => {\n      setCategories(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  console.log(post);\n  const handleChange = target => {\n    setPost(prevState => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n  const handleClick = () => {\n    api.update(id, post).then(() => history.replace(`/home/${post.userId}`));\n  };\n  categories ? console.log(categories) : console.log(\"no\");\n  const prevCategory = categories.map(category => {\n    if (category.id === post.id) return category.name;\n  });\n  return post && categories ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        name: \"title\",\n        value: post.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectCategories, {\n        value: prevCategory,\n        label: \"\\u0422\\u0435\\u043C\\u0430 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        onChange: handleChange,\n        options: categories,\n        name: \"categoryId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n        label: \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        name: \"text\",\n        value: post.text,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        type: \"submit\",\n        className: \"btn btn-primary mt-2 mb-2\"\n        //   disabled={!isValid}\n        ,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this) : \"loading\";\n};\n_s(EditPost, \"yQQew+CXcApnOFBvqzB2s5mvi40=\", false, function () {\n  return [useHistory];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useEffect","useState","api","TextField","TextAreaField","useHistory","SelectCategories","jsxDEV","_jsxDEV","EditPost","id","_s","post","setPost","userId","categoryId","title","text","categories","setCategories","history","isMounted","getPostById","then","data","fetchAllCategories","console","log","handleChange","target","prevState","name","value","handleClick","update","replace","prevCategory","map","category","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","label","onChange","options","onClick","_c","$RefreshReg$"],"sources":["/Users/darya/project/src/components/editPost.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport api from \"../api/fake.api/users.api\";\nimport TextField from \"./fields/textField\";\nimport TextAreaField from \"./fields/textAreaField\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\nimport SelectCategories from \"./selectCategories\";\n\nconst EditPost = ({ id }) => {\n  const [post, setPost] = useState({\n    id: id,\n    userId: \"\",\n    categoryId: \"\",\n    title: \"\",\n    text: \"\",\n  });\n  const [categories, setCategories] = useState();\n  const history = useHistory();\n\n  useEffect(() => {\n    let isMounted = true;\n    api.getPostById(id).then((data) => {\n      setPost(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    let isMounted = true;\n    api.fetchAllCategories().then((data) => {\n      setCategories(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  console.log(post);\n\n  const handleChange = (target) => {\n    setPost((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n\n  const handleClick = () => {\n    api.update(id, post).then(() => history.replace(`/home/${post.userId}`));\n  };\n\n  categories ? console.log(categories) : console.log(\"no\");\n  const prevCategory = categories.map((category) => {\n    if (category.id === post.id) return category.name;\n  });\n\n  return post && categories ? (\n    <div className=\"m-4\">\n      <div className=\"shadow p-4\">\n        <h1>Редактирование поста</h1>\n        <TextField\n          type=\"text\"\n          label=\"Название поста\"\n          name=\"title\"\n          value={post.title}\n          onChange={handleChange}\n        />\n        <SelectCategories\n          value={prevCategory}\n          label=\"Тема поста\"\n          onChange={handleChange}\n          options={categories}\n          name=\"categoryId\"\n        />\n        <TextAreaField\n          label=\"Содержание поста\"\n          name=\"text\"\n          value={post.text}\n          onChange={handleChange}\n        />\n        <button\n          onClick={handleClick}\n          type=\"submit\"\n          className=\"btn btn-primary mt-2 mb-2\"\n          //   disabled={!isValid}\n        >\n          Сохранить изменения\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"loading\"\n  );\n};\n\nexport default EditPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}