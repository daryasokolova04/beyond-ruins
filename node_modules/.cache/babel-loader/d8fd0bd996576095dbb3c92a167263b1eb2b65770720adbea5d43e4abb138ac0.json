{"ast":null,"code":"var _jsxFileName = \"/Users/darya/project/src/components/postsPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport api from \"../api\";\nimport PostCard from \"./postCard\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Posts from \"./posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    let isMounted = true;\n    api.data.fetchAllPosts().then(data => {\n      if (isMounted) setPosts(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [posts]);\n  useEffect(() => {\n    let isMounted = true;\n    api.data.fetchAllUsers().then(data => {\n      if (isMounted) setUsers(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [users]);\n  const renderPosts = userId => {\n    const userPosts = posts.map(post => post.userId === userId);\n    console.log(userPosts);\n  };\n  return users && posts ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"m-4 p-2\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), users.map(user => {\n      return renderPosts(user.id).length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card m-4 p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: user.name + \" \" + user.surname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), posts.map(post => {\n          if (post.userId === user.id) {\n            return /*#__PURE__*/_jsxDEV(PostCard, {\n              postId: post.id\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 26\n            }, this);\n          }\n        })]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true) : \"Loading\";\n};\n_s(PostsPage, \"9bTF7W+p04eBmn16vitv0riykIc=\");\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","api","PostCard","useEffect","useState","Posts","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsPage","_s","users","setUsers","posts","setPosts","isMounted","data","fetchAllPosts","then","fetchAllUsers","renderPosts","userId","userPosts","map","post","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","user","id","length","name","surname","postId","_c","$RefreshReg$"],"sources":["/Users/darya/project/src/components/postsPage.jsx"],"sourcesContent":["import React from \"react\";\nimport api from \"../api\";\nimport PostCard from \"./postCard\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Posts from \"./posts\";\n\nconst PostsPage = () => {\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    let isMounted = true;\n    api.data.fetchAllPosts().then((data) => {\n      if (isMounted) setPosts(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [posts]);\n\n  useEffect(() => {\n    let isMounted = true;\n    api.data.fetchAllUsers().then((data) => {\n      if (isMounted) setUsers(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [users]);\n\n  const renderPosts = (userId) => {\n    const userPosts = posts.map((post) => post.userId === userId);\n    console.log(userPosts);\n  };\n\n  return users && posts ? (\n    <>\n      <h1 className=\"m-4 p-2\">Posts</h1>\n      {users.map((user) => {\n        return (\n          renderPosts(user.id).length !== 0 && (\n            <div key={user.id} className=\"card m-4 p-2\">\n              <h3>{user.name + \" \" + user.surname}</h3>\n              {posts.map((post) => {\n                if (post.userId === user.id) {\n                  return <PostCard key={post.id} postId={post.id} />;\n                }\n              })}\n            </div>\n          )\n        );\n      })}\n    </>\n  ) : (\n    \"Loading\"\n  );\n};\n\nexport default PostsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAC,MAAM;IACd,IAAIa,SAAS,GAAG,IAAI;IACpBf,GAAG,CAACgB,IAAI,CAACC,aAAa,CAAC,CAAC,CAACC,IAAI,CAAEF,IAAI,IAAK;MACtC,IAAID,SAAS,EAAED,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC;IACF,OAAO,MAAM;MACXD,SAAS,GAAG,KAAK;IACnB,CAAC;EACH,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEXX,SAAS,CAAC,MAAM;IACd,IAAIa,SAAS,GAAG,IAAI;IACpBf,GAAG,CAACgB,IAAI,CAACG,aAAa,CAAC,CAAC,CAACD,IAAI,CAAEF,IAAI,IAAK;MACtC,IAAID,SAAS,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAC/B,CAAC,CAAC;IACF,OAAO,MAAM;MACXD,SAAS,GAAG,KAAK;IACnB,CAAC;EACH,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMS,WAAW,GAAIC,MAAM,IAAK;IAC9B,MAAMC,SAAS,GAAGT,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACH,MAAM,KAAKA,MAAM,CAAC;IAC7DI,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;EACxB,CAAC;EAED,OAAOX,KAAK,IAAIE,KAAK,gBACnBP,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA;MAAIsB,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCrB,KAAK,CAACY,GAAG,CAAEU,IAAI,IAAK;MACnB,OACEb,WAAW,CAACa,IAAI,CAACC,EAAE,CAAC,CAACC,MAAM,KAAK,CAAC,iBAC/B7B,OAAA;QAAmBsB,SAAS,EAAC,cAAc;QAAAD,QAAA,gBACzCrB,OAAA;UAAAqB,QAAA,EAAKM,IAAI,CAACG,IAAI,GAAG,GAAG,GAAGH,IAAI,CAACI;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACxCnB,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAK;UACnB,IAAIA,IAAI,CAACH,MAAM,KAAKY,IAAI,CAACC,EAAE,EAAE;YAC3B,oBAAO5B,OAAA,CAACL,QAAQ;cAAeqC,MAAM,EAAEd,IAAI,CAACU;YAAG,GAAzBV,IAAI,CAACU,EAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAoB,CAAC;UACpD;QACF,CAAC,CAAC;MAAA,GANMC,IAAI,CAACC,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACN;IAEL,CAAC,CAAC;EAAA,eACF,CAAC,GAEH,SACD;AACH,CAAC;AAACtB,EAAA,CAjDID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAmDf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}