{"ast":null,"code":"var _jsxFileName = \"/Users/darya/project/src/components/addPost.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport TextField from \"./fields/textField\";\nimport { useState } from \"react\";\nimport TextAreaField from \"./fields/textAreaField\";\nimport { useEffect } from \"react\";\nimport api from \"../api/fake.api/users.api\";\nimport { useNavigate } from \"react-router-dom\";\nimport SelectCategories from \"./selectCategories\";\nimport axios from \"axios\";\nimport { validator } from \"../utils/validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPost = ({\n  postId,\n  userId\n}) => {\n  _s();\n  const [post, setPost] = useState({\n    id: postId,\n    userId: userId,\n    categoryId: \"type1\",\n    title: \"\",\n    text: \"\"\n  });\n  const [categories, setCategories] = useState([]);\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    let isMounted = true;\n    api.fetchAllCategories().then(data => {\n      setCategories(data);\n      axios.get(\"http://127.0.0.1:8000/api/v1/categories/\").then(data => console.log(data));\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  const handleChange = target => {\n    setPost(prevState => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n  const handleClick = () => {\n    // axios\n    //   .post(\"http://127.0.0.1:8000/api/v1/Article/\", {\n    //     id: 2,\n    //     title: \"Россия\",\n    //     main_text: \"о России\",\n    //     user_id: 1,\n    //     category_id: 1,\n    //   })\n    //   .then((data) => console.log(data));\n    api.addPost(post);\n    navigate(`/home/${userId}`, {\n      replace: true\n    });\n  };\n  const validate = () => {\n    const errors = validator(post, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  useEffect(() => {\n    validate();\n  }, [post]);\n  const isValid = Object.keys(errors).length === 0;\n  const validatorConfig = {\n    title: {\n      isRequired: {\n        message: \"Поле обязательно для заполнения\"\n      }\n    },\n    text: {\n      isRequired: {\n        message: \"Поле обязательно для заполнения\"\n      }\n    }\n  };\n  console.log(categories);\n  return categories ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        name: \"title\",\n        value: post.title,\n        onChange: handleChange,\n        error: errors.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectCategories, {\n        defaultValue: post.categoryId,\n        label: \"\\u0422\\u0435\\u043C\\u0430 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        onChange: handleChange,\n        options: categories,\n        name: \"categoryId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n        label: \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        name: \"text\",\n        value: post.text,\n        onChange: handleChange,\n        error: errors.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        type: \"submit\",\n        className: \"btn btn-primary mt-2 mb-2\"\n        //   disabled={!isValid}\n        ,\n        children: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this) : \"loading\";\n};\n_s(AddPost, \"Jd2hjP+DOuB3hsTtsS9LCO92wPc=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPost;\nexport default AddPost;\nvar _c;\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"names":["React","TextField","useState","TextAreaField","useEffect","api","useNavigate","SelectCategories","axios","validator","jsxDEV","_jsxDEV","AddPost","postId","userId","_s","post","setPost","id","categoryId","title","text","categories","setCategories","errors","setErrors","navigate","isMounted","fetchAllCategories","then","data","get","console","log","handleChange","target","prevState","name","value","handleClick","addPost","replace","validate","validatorConfig","Object","keys","length","isValid","isRequired","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","label","onChange","error","defaultValue","options","onClick","_c","$RefreshReg$"],"sources":["/Users/darya/project/src/components/addPost.jsx"],"sourcesContent":["import React from \"react\";\nimport TextField from \"./fields/textField\";\nimport { useState } from \"react\";\nimport TextAreaField from \"./fields/textAreaField\";\nimport { useEffect } from \"react\";\nimport api from \"../api/fake.api/users.api\";\nimport { useNavigate } from \"react-router-dom\";\nimport SelectCategories from \"./selectCategories\";\nimport axios from \"axios\";\nimport { validator } from \"../utils/validator\";\n\nconst AddPost = ({ postId, userId }) => {\n  const [post, setPost] = useState({\n    id: postId,\n    userId: userId,\n    categoryId: \"type1\",\n    title: \"\",\n    text: \"\",\n  });\n  const [categories, setCategories] = useState([]);\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    let isMounted = true;\n    api.fetchAllCategories().then((data) => {\n      setCategories(data);\n      axios\n        .get(\"http://127.0.0.1:8000/api/v1/categories/\")\n        .then((data) => console.log(data));\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const handleChange = (target) => {\n    setPost((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n\n  const handleClick = () => {\n    // axios\n    //   .post(\"http://127.0.0.1:8000/api/v1/Article/\", {\n    //     id: 2,\n    //     title: \"Россия\",\n    //     main_text: \"о России\",\n    //     user_id: 1,\n    //     category_id: 1,\n    //   })\n    //   .then((data) => console.log(data));\n    api.addPost(post);\n    navigate(`/home/${userId}`, { replace: true });\n  };\n\n  const validate = () => {\n    const errors = validator(post, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  useEffect(() => {\n    validate();\n  }, [post]);\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const validatorConfig = {\n    title: {\n      isRequired: { message: \"Поле обязательно для заполнения\" },\n    },\n    text: {\n      isRequired: { message: \"Поле обязательно для заполнения\" },\n    },\n  };\n\n  console.log(categories);\n\n  return categories ? (\n    <div className=\"m-4\">\n      <div className=\"shadow p-4\">\n        <h1>Создание поста</h1>\n        <TextField\n          type=\"text\"\n          label=\"Название поста\"\n          name=\"title\"\n          value={post.title}\n          onChange={handleChange}\n          error={errors.title}\n        />\n        <SelectCategories\n          defaultValue={post.categoryId}\n          label=\"Тема поста\"\n          onChange={handleChange}\n          options={categories}\n          name=\"categoryId\"\n        />\n        <TextAreaField\n          label=\"Содержание поста\"\n          name=\"text\"\n          value={post.text}\n          onChange={handleChange}\n          error={errors.text}\n        />\n        <button\n          onClick={handleClick}\n          type=\"submit\"\n          className=\"btn btn-primary mt-2 mb-2\"\n          //   disabled={!isValid}\n        >\n          Опубликовать\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"loading\"\n  );\n};\n\nexport default AddPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}