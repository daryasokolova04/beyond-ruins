{"ast":null,"code":"var _jsxFileName = \"/Users/darya/project/src/components/postCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../api/fake.api/users.api\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCard = ({\n  postId\n}) => {\n  _s();\n  const history = useHistory();\n  const [post, setPost] = useState();\n  const [categories, setCategories] = useState();\n  const [comments, setComments] = useState();\n  useEffect(() => {\n    let isMounted = true;\n    api.getPostById(postId).then(data => {\n      setPost(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  useEffect(() => {\n    let isMounted = true;\n    api.fetchAllCategories().then(data => {\n      setCategories(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  useEffect(() => {\n    let isMounted = true;\n    api.getCommentsByPostId(postId).then(data => {\n      setComments(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  //   console.log(comments, postId);\n  const handleEdit = () => {\n    history.push(`/home/${postId}/edit`);\n  };\n  const getCategoryBadge = item => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge bg-\" + item.color,\n      children: item.name\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n  const getUserName = userId => {\n    api.getUserById(userId).then(data => {\n      //   console.log(data.name + \" \" + data.surname);\n      return data.name + \" \" + data.surname;\n    });\n  };\n  const getComments = comment => {\n    const name = getUserName(comment.userId);\n    console.log(name);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer m-2 p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: api.getUserById(comment.userId).then(data => {\n          return data.name + \" \" + data.surname;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.commentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, comment.commentId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n  const handleClick = () => {\n    api.deletePost(postId);\n  };\n  return post && categories && comments ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: categories.map(category => {\n        if (category.id === post.categoryId) {\n          return getCategoryBadge(category);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), comments && comments.map(comment => getComments(comment)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        className: \"btn btn-success m-2\",\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClick,\n        className: \"btn btn-danger m-2\",\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this) : \"loading...\";\n};\n_s(PostCard, \"qvHXHKV7cqyjmre2R3R+KiltvJo=\", false, function () {\n  return [useHistory];\n});\n_c = PostCard;\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useEffect","useState","api","useHistory","jsxDEV","_jsxDEV","PostCard","postId","_s","history","post","setPost","categories","setCategories","comments","setComments","isMounted","getPostById","then","data","fetchAllCategories","getCommentsByPostId","handleEdit","push","getCategoryBadge","item","className","color","children","name","id","fileName","_jsxFileName","lineNumber","columnNumber","getUserName","userId","getUserById","surname","getComments","comment","console","log","commentText","commentId","handleClick","deletePost","map","category","categoryId","title","text","onClick","type","_c","$RefreshReg$"],"sources":["/Users/darya/project/src/components/postCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"../api/fake.api/users.api\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\n\nconst PostCard = ({ postId }) => {\n  const history = useHistory();\n  const [post, setPost] = useState();\n  const [categories, setCategories] = useState();\n  const [comments, setComments] = useState();\n\n  useEffect(() => {\n    let isMounted = true;\n    api.getPostById(postId).then((data) => {\n      setPost(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    let isMounted = true;\n    api.fetchAllCategories().then((data) => {\n      setCategories(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    let isMounted = true;\n    api.getCommentsByPostId(postId).then((data) => {\n      setComments(data);\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  //   console.log(comments, postId);\n  const handleEdit = () => {\n    history.push(`/home/${postId}/edit`);\n  };\n\n  const getCategoryBadge = (item) => {\n    return (\n      <span className={\"badge bg-\" + item.color} key={item.id}>\n        {item.name}\n      </span>\n    );\n  };\n\n  const getUserName = (userId) => {\n    api.getUserById(userId).then((data) => {\n      //   console.log(data.name + \" \" + data.surname);\n      return data.name + \" \" + data.surname;\n    });\n  };\n\n  const getComments = (comment) => {\n    const name = getUserName(comment.userId);\n    console.log(name);\n    return (\n      <div key={comment.commentId} className=\"card-footer m-2 p-2\">\n        <p>\n          {api.getUserById(comment.userId).then((data) => {\n            return data.name + \" \" + data.surname;\n          })}\n        </p>\n        <p>{comment.commentText}</p>\n      </div>\n    );\n  };\n\n  const handleClick = () => {\n    api.deletePost(postId);\n  };\n\n  return post && categories && comments ? (\n    <div className=\"card mb-2\">\n      <div className=\"card-header\">\n        {categories.map((category) => {\n          if (category.id === post.categoryId) {\n            return getCategoryBadge(category);\n          }\n        })}\n      </div>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{post.title}</h5>\n        <p className=\"card-text\">{post.text}</p>\n        {comments && comments.map((comment) => getComments(comment))}\n\n        <button onClick={handleEdit} className=\"btn btn-success m-2\">\n          Редактировать пост\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleClick}\n          className=\"btn btn-danger m-2\"\n        >\n          Удалить\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"loading...\"\n  );\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}