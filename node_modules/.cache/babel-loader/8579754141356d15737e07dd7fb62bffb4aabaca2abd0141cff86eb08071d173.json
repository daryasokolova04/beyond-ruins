{"ast":null,"code":"import axios from \"axios\";\nlet intervalId = setInterval(() => {\n  axios.post(\"http://127.0.0.1:8000/api/v1/refresh/\", {\n    refresh: refreshToken\n  }, {\n    dataType: \"json\",\n    contentType: \"application/json\"\n  }).then(response => {\n    localStorage.setItem(\"access\", response.data.access);\n  }).catch(err => console.log(err));\n}, 10000);\nexport const refreshToken = () => {\n  let refreshToken = localStorage.getItem(\"refresh\");\n  let intervalId = refreshToken ? setInterval(() => {\n    axios.post(\"http://127.0.0.1:8000/api/v1/refresh/\", {\n      refresh: refreshToken\n    }, {\n      dataType: \"json\",\n      contentType: \"application/json\"\n    }).then(response => {\n      localStorage.setItem(\"access\", response.data.access);\n    }).catch(err => console.log(err));\n  }, 10000) : null;\n  const abortRefeshToken = () => {\n    if (intervalId) clearInterval(intervalId);\n  };\n};","map":{"version":3,"names":["axios","intervalId","setInterval","post","refresh","refreshToken","dataType","contentType","then","response","localStorage","setItem","data","access","catch","err","console","log","getItem","abortRefeshToken","clearInterval"],"sources":["/Users/darya/project/src/services/refresh.jsx"],"sourcesContent":["import axios from \"axios\";\n\nlet intervalId = setInterval(() => {\n  axios\n    .post(\n      \"http://127.0.0.1:8000/api/v1/refresh/\",\n      { refresh: refreshToken },\n      {\n        dataType: \"json\",\n        contentType: \"application/json\",\n      }\n    )\n    .then((response) => {\n      localStorage.setItem(\"access\", response.data.access);\n    })\n    .catch((err) => console.log(err));\n}, 10000);\n\nexport const refreshToken = () => {\n  let refreshToken = localStorage.getItem(\"refresh\");\n\n  let intervalId = refreshToken\n    ? setInterval(() => {\n        axios\n          .post(\n            \"http://127.0.0.1:8000/api/v1/refresh/\",\n            { refresh: refreshToken },\n            {\n              dataType: \"json\",\n              contentType: \"application/json\",\n            }\n          )\n          .then((response) => {\n            localStorage.setItem(\"access\", response.data.access);\n          })\n          .catch((err) => console.log(err));\n      }, 10000)\n    : null;\n  const abortRefeshToken = () => {\n    if (intervalId) clearInterval(intervalId);\n  };\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAIC,UAAU,GAAGC,WAAW,CAAC,MAAM;EACjCF,KAAK,CACFG,IAAI,CACH,uCAAuC,EACvC;IAAEC,OAAO,EAAEC;EAAa,CAAC,EACzB;IACEC,QAAQ,EAAE,MAAM;IAChBC,WAAW,EAAE;EACf,CACF,CAAC,CACAC,IAAI,CAAEC,QAAQ,IAAK;IAClBC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC;EACtD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACrC,CAAC,EAAE,KAAK,CAAC;AAET,OAAO,MAAMV,YAAY,GAAGA,CAAA,KAAM;EAChC,IAAIA,YAAY,GAAGK,YAAY,CAACQ,OAAO,CAAC,SAAS,CAAC;EAElD,IAAIjB,UAAU,GAAGI,YAAY,GACzBH,WAAW,CAAC,MAAM;IAChBF,KAAK,CACFG,IAAI,CACH,uCAAuC,EACvC;MAAEC,OAAO,EAAEC;IAAa,CAAC,EACzB;MACEC,QAAQ,EAAE,MAAM;MAChBC,WAAW,EAAE;IACf,CACF,CAAC,CACAC,IAAI,CAAEC,QAAQ,IAAK;MAClBC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC;IACtD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,KAAK,CAAC,GACT,IAAI;EACR,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIlB,UAAU,EAAEmB,aAAa,CAACnB,UAAU,CAAC;EAC3C,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}