import React, { useContext, useRef, createContext } from 'react';
import PropTypes from 'prop-types';

var Id =
/*#__PURE__*/
createContext(function () {
  throw new TypeError('Please wrap your application with IdProvider');
});

var useIdGetter = function useIdGetter(prefix) {
  if (prefix === void 0) {
    prefix = 'id';
  }

  var ref = useRef();

  if (!ref.current) {
    var me = {
      id: 0,
      get: function get() {
        return prefix + "-" + me.id++;
      }
    };
    ref.current = me;
  }

  return ref.current.get;
};

var IdProvider = function IdProvider(_ref) {
  var children = _ref.children;
  var get = useIdGetter();
  return React.createElement(Id.Provider, {
    value: get
  }, children);
};
IdProvider.propTypes = {
  children: PropTypes.node.isRequired
};
var useId = function useId() {
  var getter = useContext(Id);
  var ref = useRef();
  if (!ref.current) ref.current = getter();
  return ref.current;
};
var useGetId = function useGetId() {
  var getter = useContext(Id);
  var base = useRef();
  if (!base.current) base.current = getter();
  return useIdGetter(base.current);
};

export { IdProvider, useGetId, useId };
//# sourceMappingURL=react-use-id-hook.esm.js.map
